

-------------01. One-To-One Relationship--------------


USE camp;

CREATE TABLE passports(
passport_id INT(11) PRIMARY KEY NOT NULL,
passport_number VARCHAR(50)
);

INSERT INTO passports(passport_id, passport_number) VALUES 
(101,'N34FG21B'),
(102,'K65LO4R7'),
(103,'ZE657QP2');


CREATE TABLE persons(
person_id INT(11) AUTO_INCREMENT PRIMARY KEY NOT NULL,
first_name VARCHAR(50),
salary DECIMAL(10,2),
passport_id INT(11) UNIQUE,
CONSTRAINT fk_persons_passports
FOREIGN KEY (passport_id)
REFERENCES passports(passport_id)
);

INSERT INTO persons(person_id, first_name, salary, passport_id) VALUES
(1,'Roberto',43300.00,102),
(2,'Tom',56100.00,103),
(3,'Yana',60200.00,101);


-------------02. One-To-Many Relationship-------------


USE camp;

CREATE TABLE manufacturers(
manufacturer_id INT(11) PRIMARY KEY NOT NULL,
name VARCHAR(20),
established_on DATE NOT NULL
);

INSERT INTO models(model_id, name, manufacturer_id) VALUES
(101,'X1',1),
(102,'i6',1),
(103,'Model S',2),
(104,'Model X',2),
(105,'Model 3',2),
(106,'Nova',3);


CREATE TABLE models(
model_id INT(10) PRIMARY KEY UNIQUE NOT NULL,
name VARCHAR(20),
manufacturer_id INT,
CONSTRAINT fk_models_manufacturers 
FOREIGN KEY (manufacturer_id) 
REFERENCES manufacturers(manufacturer_id)	
);

INSERT INTO manufacturers (manufacturer_id, name, established_on)VALUES
(1,'BMW','1916-03-01'),
(2,'Tesla','2003-01-01'),
(3,'Lada','1966-05-01');


-------------03. Many-To-Many Relationship-------------


USE camp;

CREATE TABLE students(
student_id INT(11) PRIMARY KEY NOT NULL,
name VARCHAR(50)
);

INSERT INTO students(student_id, name) VALUES
(1, 'Mila'),
(2, 'Toni'),
(3, 'Ron');


CREATE TABLE exams(
exam_id INT(11) PRIMARY KEY NOT NULL,
name VARCHAR(50)
);

INSERT INTO exams(exam_id, name) VALUES
(101, 'SpringMVC'),
(102, 'Neo4j'),
(103, 'Oracle 11g');
 
 
CREATE TABLE students_exams(
student_id INT(11) NOT NULL,
exam_id INT(11) NOT NULL,
CONSTRAINT fk_students_exams_students FOREIGN KEY(student_id) REFERENCES students(student_id),
CONSTRAINT fk_students_exams_exam_id FOREIGN KEY(exam_id) REFERENCES exams(exam_id)
);
 
INSERT INTO students_exams(student_id, exam_id) VALUES
(1, 101),
(1, 102),
(2, 101),
(3, 103),
(2, 102),
(2, 103);


-------------04. Self-Referencing-------------


CREATE DATABASE new_camp;
USE new_camp;

CREATE TABLE teachers
(
teacher_id INT(11) NOT NULL,
name VARCHAR(50) NOT NULL,
manager_id INT(11),
CONSTRAINT pk_teacher_id PRIMARY KEY (teacher_id),
CONSTRAINT fk_teachers_teachers FOREIGN KEY (manager_id) REFERENCES teachers(teacher_id)
);

INSERT INTO teachers VALUES
(101, 'John', NULL),
(105, 'Maya', 101),
(106, 'Silvia', 101),
(102, 'Ted', 106),
(103, 'Mark', 106),
(104, 'Greta', 105);


-------------05. Online Store Database-------------


CREATE DATABASE online_store;
USE online_store;

CREATE TABLE cities(
city_id INT(11), 
name VARCHAR(50),
CONSTRAINT pk_cities PRIMARY KEY (city_id)
);

CREATE TABLE customers(
customer_id INT(11),
name VARCHAR(50),
birthday DATE,
city_id INT(11),
CONSTRAINT pk_customer_id PRIMARY KEY (customer_id),
CONSTRAINT fk_customers_cities FOREIGN KEY (city_id) REFERENCES cities(city_id)
);

CREATE TABLE orders(
order_id INT(11),
customer_id INT(11),
CONSTRAINT pk_order_id PRIMARY KEY (order_id),
CONSTRAINT fk_orders_customers FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE item_types(
item_type_id INT(11),
name VARCHAR(50),
CONSTRAINT pk_item_type_id PRIMARY KEY (item_type_id)
);

CREATE TABLE items(
item_id INT(11),
name VARCHAR(50),
item_type_id INT(11),
CONSTRAINT pk_item_id PRIMARY KEY (item_id),
CONSTRAINT fk_items_item_types FOREIGN KEY (item_type_id) REFERENCES item_types(item_type_id)
);

CREATE TABLE order_items(
order_id INT(11),
item_id INT(11),
CONSTRAINT pk_order_item PRIMARY KEY (order_id, item_id),
CONSTRAINT fk_order_items_orders FOREIGN KEY(order_id) REFERENCES orders(order_id),
CONSTRAINT fk_order_items_items FOREIGN KEY(item_id) REFERENCES items(item_id)
);



-------------06. University Database-------------


CREATE DATABASE university_database;
USE university_database;

CREATE TABLE majors(
major_id INT(11),
name VARCHAR(50),
CONSTRAINT pk_majors PRIMARY KEY(major_id)
);

CREATE TABLE students(
student_id INT(11),
student_number VARCHAR(12),
student_name VARCHAR(50),
major_id INT(11),
CONSTRAINT pk_students PRIMARY KEY (student_id),
CONSTRAINT fk_students_majors FOREIGN KEY(major_id) REFERENCES majors(major_id)
);

CREATE TABLE payments(
payment_id INT(11),
payment_date DATE,
payment_amount DECIMAL(8,2),
student_id INT(11),
CONSTRAINT pk_payments PRIMARY KEY (payment_id),
CONSTRAINT fk_payments_students FOREIGN KEY(student_id) REFERENCES students(student_id)
);

CREATE TABLE subjects(
subject_id INT(11),
subject_name VARCHAR(50),
CONSTRAINT pk_subjects PRIMARY KEY(subject_id)
);

CREATE TABLE agenda(
student_id INT(11),
subject_id INT(11),
CONSTRAINT pk_agenda PRIMARY KEY(student_id,subject_id),
CONSTRAINT fk_agenda_subjects FOREIGN KEY(subject_id) REFERENCES subjects(subject_id),
CONSTRAINT fk_agenda_students FOREIGN KEY(student_id) REFERENCES students(student_id)
);


-------------09. Peaks in Rila-------------


USE geography;

SELECT mountain_range, peak_name, elevation AS peak_elevation 
FROM peaks AS p
JOIN mountains AS m
ON p.mountain_id = m.id
WHERE mountain_range = 'Rila'
ORDER BY peak_elevation DESC;

