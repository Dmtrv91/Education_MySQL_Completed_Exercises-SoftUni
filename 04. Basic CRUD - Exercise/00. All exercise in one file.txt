

-------------01. Find All Information About Departments--------------


USE soft_uni;

SELECT * FROM departments;


-------------02. Find all Department Names-------------


USE soft_uni;

SELECT name FROM departments;


-------------03. Find salary of Each Employee-------------


USE soft_uni;

SELECT first_name, last_name, salary FROM employees;


-------------04. Find Full Name of Each Employee-------------


USE soft_uni;

SELECT first_name, middle_name, last_name FROM employees;


-------------05. Find Email Address of Each Employee-------------


USE soft_uni;

SELECT concat(e.first_name, '.', e.last_name, '@', 'softuni.bg') AS 'full_email_addres'
FROM employees AS e;


-------------06. Find All Different Employeeâ€™s Salaries-------------


USE soft_uni;

SELECT DISTINCT salary FROM employees ORDER BY salary;


-------------07. Find all Information About Employees-------------


USE soft_uni;

SELECT * from employees
WHERE job_title = 'Sales Representative';


-------------08. Find Names of All Employees by Salary in Range-------------


USE soft_uni;

SELECT first_name, last_name, job_title from employees
WHERE salary BETWEEN 20000 AND 30000;



-------------09. Find Names of All Employees-------------


USE soft_uni;

SELECT concat_ws(' ', e.first_name, e.middle_name, e.last_name) AS 'full name'
FROM employees AS e
WHERE salary = 25000 OR salary = 14000 OR salary = 12500 OR salary =  23600;


-------------10. Find All Employees Without Manager-------------


USE soft_uni;

SELECT first_name, last_name FROM employees
WHERE manager_id IS NULL;



-------------11. Find All Employees with Salary More Than-------------


USE soft_uni;

SELECT first_name, last_name, salary FROM employees
WHERE salary > 50000
ORDER BY salary DESC;


-------------12. Find 5 Best Paid Employees-------------


USE soft_uni;

SELECT first_name, last_name FROM employees
ORDER BY salary DESC LIMIT 5;


-------------13. Find All Employees Except Marketing-------------


USE soft_uni;

SELECT first_name, last_name FROM employees
WHERE department_id != 4;


-------------14. Sort Employees Table-------------


USE soft_uni;

SELECT * FROM employees
ORDER BY salary DESC, first_name ASC, last_name DESC, middle_name ASC;


-------------15. Create View Employees with Salaries-------------


USE soft_uni;

CREATE VIEW v_employees_salaries AS
SELECT first_name, last_name, salary
FROM employees;


-------------16. Create View Employees with Job Titles-------------


USE soft_uni;

CREATE VIEW v_employees_job_titles AS
SELECT concat_ws(' ', e.first_name, (CASE WHEN e.middle_name IS NULL THEN '' ELSE e.middle_name END), e.last_name) AS 'full_name', e.job_title
FROM employees AS e;


-------------17. Distinct Job Titles-------------


USE soft_uni;

SELECT DISTINCT job_title FROM employees
ORDER BY job_title;


-------------18. Find First 10 Started Projects-------------


USE soft_uni;

SELECT * FROM projects
ORDER BY start_date,name 
LIMIT 10;


-------------19. Last 7 Hired Employees-------------


USE soft_uni;

SELECT first_name, last_name, hire_date
FROM employees
ORDER BY hire_date DESC
LIMIT 7;


-------------20. Increase Salaries-------------

USE soft_uni;

update employees
set salary=salary*1.12
WHERE department_id='1'or department_id='2' or department_id='4' or department_id='11';
SELECT salary FROM employees;


-------------21. All Mountain Peaks-------------

USE geography;

SELECT peak_name FROM peaks 
ORDER BY peak_name;


-------------22. Biggest Countries by Population-------------


USE geography;

SELECT country_name, population FROM countries
WHERE continent_code = 'EU'
ORDER BY population DESC, country_name 
ASC LIMIT 30;


-------------23. Countries and Currency (Euro / Not Euro)-------------


USE geography;

SELECT country_name,country_code,if(currency_code='EUR','Euro','Not Euro') as currency FROM countries 
ORDER BY country_name ASC


-------------24. All Diablo Characters-------------


USE diablo;

SELECT name FROM characters
ORDER BY name ASC;

